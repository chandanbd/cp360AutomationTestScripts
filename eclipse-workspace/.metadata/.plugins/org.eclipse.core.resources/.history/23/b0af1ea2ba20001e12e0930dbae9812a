package org.baseclass;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Set;

import org.apache.commons.io.FileUtils;
import org.apache.commons.lang3.text.WordUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DateUtil;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;

import io.github.bonigarcia.wdm.WebDriverManager;

public class BaseClass {

	public static WebDriver driver;
	public static Actions a;
	public static Robot r;
	public static JavascriptExecutor js;


	public static void launchBrowser()
	{
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
	}

	public static void loadUrl(String url)
	{
		driver.get(url);
	}

	public static void maxBrowser()
	{
		driver.manage().window().maximize();
	}

	public static void fill(WebElement element, String usertext) 
	{

		element.sendKeys(usertext);
	}

	public static void buttonClick(WebElement element)
	{
		element.click();

	}

	public static void pageTitle() 
	{

		String title = driver.getTitle();
		System.out.println(title);

	}

	public static void pageUrl() 
	{
		String currenturl = driver.getCurrentUrl();
		System.out.println(currenturl);
	}

	public static void backButton() 
	{
		driver.navigate().back();
	}

	public static void getText(WebElement element )
	{
		String text = element.getText();
		System.out.println(text);
	}

	public static void getAttribute(WebElement element)
	{
		String attribute = element.getAttribute("value");
		System.out.println(attribute);
	}


	public static void moveToElement(WebElement element)
	{
		a = new Actions(driver);
		a.moveToElement(element).perform();
	}

	public static void dragDrop(WebElement src, WebElement target)
	{
		a.dragAndDrop(src, target).perform();

	}

	public static void doubleClick(WebElement element)
	{
		a.doubleClick(element).perform();
	}

	public static void rightClick(WebElement element)
	{
		a.contextClick(element).perform();
	}

	public static void getScreenshotAs() throws IOException
	{
		TakesScreenshot tk = (TakesScreenshot) driver;
		File src = tk.getScreenshotAs(OutputType.FILE);
		File dest = new File("C:\\Users\\chand\\eclipse-workspace\\ChandanAutomationH2R\\Screenshot");
		FileUtils.copyFile(src, dest);
	}

	public static void enterKey() throws AWTException
	{
		r = new Robot();
		r.keyPress(KeyEvent.VK_ENTER);
		r.keyRelease(KeyEvent.VK_ENTER );

	}

	public static void paste()
	{
		r.keyPress(KeyEvent.VK_CONTROL);
		r.keyRelease(KeyEvent.VK_CONTROL);
		r.keyPress(KeyEvent.VK_V);
		r.keyRelease(KeyEvent.VK_V);
	}

	public static void copy()
	{
		r.keyPress(KeyEvent.VK_CONTROL);
		r.keyRelease(KeyEvent.VK_CONTROL);
		r.keyPress(KeyEvent.VK_C);
		r.keyRelease(KeyEvent.VK_C);
	}

	public static void scrollUp()
	{
		js = (JavascriptExecutor)driver;
		js.executeScript("window.scrollBy(1000,0)" );
	}

	public static void scrollDown()
	{
		js = (JavascriptExecutor)driver;
		js.executeScript("window.scrollBy(0,1000)" );
	}

	public static void click(WebElement element)
	{
		element = driver.findElement(By.xpath(""));
		js = (JavascriptExecutor)driver;
		js.executeScript("arguments[0].click();", element);

	}

	public static void windowHandles(int i)
	{
		Set <String>  handles = driver.getWindowHandles();
		ArrayList <String> list = new ArrayList<String>(handles);
		int  r = list.size();
		System.out.println("number of windows"+ r);
		driver.switchTo().window(list.get(i));
	}

	public static String excelsheet(int RowNo, int CellNo) throws IOException
	{
		File f = new File("");
		FileInputStream fin = new FileInputStream(f);
		Workbook book = new XSSFWorkbook(fin);
		Sheet sh = book.getSheet("Sheet1");
		Row r = sh.getRow(RowNo);
		Cell c = r.getCell(CellNo);
		int cellType = c.getCellType();
		String value ="";

		if(cellType == 1)
		{
			value = c.getStringCellValue();
		}

		else if(DateUtil.isCellDateFormatted(c))
		{
			Date d = c.getDateCellValue();
			SimpleDateFormat sim = new SimpleDateFormat("dd-mm-yyyy");
			value = sim.format(d);
		}
		
		else
		{
			double dd = c.getNumericCellValue();
			long l = (long)dd;
			System.out.println(l);
			value = String.valueOf(l);
		}
		
		return value;

	}





















































}
